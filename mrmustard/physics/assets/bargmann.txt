<%!
import plotly.graph_objects as go
%>

<style>

  .table-bargmann {
    border-collapse: collapse;
    text_A-align: left;
  }

  .th-bargmann, td-bargmann {
    text_A-align: left;
  }

  .Abc-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(1, 1fr);
    gap: 40px;
    max-width: 450px;
  }

  .bc-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 40px;
  }

  .A, .b, .c {
    background-color: #FBAB7E;
    background-image: linear-gradient(to top, #FBAB7E 0%, #F7CE68 100%);
    border-radius: 15px;
    box-shadow: 3px 5px 10px black;
  }
  .fig-abc {
    box-shadow: 3px 5px 10px black;
    margin: 10px;
  }

</style>

<h1>Bargmann representation</h1>

<table class="table-bargmann">
    <tr>
        <th class="th-bargmann">Ansatz</th>
        <th class="th-bargmann">Shape A</th>
        <th class="th-bargmann">Shape b</th>
        <th class="th-bargmann">Shape c</th>
    </tr>

    <tr>
        <td class="td-bargmann">${rep.ansatz.__class__.__qualname__}</td>
        <td class="td-bargmann">${rep.A.shape}</td>
        <td class="td-bargmann">${rep.b.shape}</td>
        <td class="td-bargmann">${rep.c.shape}</td>
    </tr>
</table>

<%
    plot_fig = rep.A.shape[0] == 1

    if plot_fig:
        A = rep.A[0]
        b = rep.b
        c = rep.c

        layout_A = dict(
            height=200,
            width=200,
            margin=dict(l=0, r=0, t=0, b=0),
            showlegend=False,
            xaxis=dict(
                showgrid=True,
                showline=True,
            ),
            yaxis=dict(
                autorange="reversed",
                showgrid=True,
            )
        )

        layout_b = dict(
            height=80,
            width=200,
            margin=dict(l=0, r=0, t=0, b=0),
            showlegend=False,
            xaxis=dict(
                showgrid=True,
                showline=True,
            ),
            yaxis=dict(
                autorange="reversed",
                showticklabels=False,
            )
        )

        layout_c = dict(
            height=80,
            width=100,
            margin=dict(l=0, r=0, t=0, b=0),
            showlegend=False,
            xaxis=dict(
                showgrid=True,
                showline=True,
                showticklabels=False,
            ),
            yaxis=dict(
                autorange="reversed",
                showticklabels=False,
            )
        )

        fig_A = go.Figure(
            data=go.Heatmap(
                z=abs(A),
                colorscale="viridis",
                showscale=False,
            ),
            layout=layout_A
        )

        fig_b = go.Figure(
            data=go.Heatmap(
                z=abs(b),
                colorscale="viridis",
                showscale=False,
                xgap=1,
            ),
            layout=layout_b,
        )

        fig_c = go.Figure(
            data=go.Heatmap(
                z=[abs(c)],
                colorscale="viridis",
                showscale=False,
            ),
            layout=layout_c
        )
%>

% if plot_fig:
    <div class="Abc-grid">
        <div class="Abc-grid-item A">
            <h5 style="margin: 10px;">Bargmann A</h5>
            <div class="fig-abc">
                ${fig_A.to_html(full_html=False, include_plotlyjs="cdn", config = {'displayModeBar': False})}
            </div>
        </div>
        <div class="Abc-grid-item bc-grid">
            <div class="b">
                <h5 style="margin: 10px;">Bargmann b</h5>
                <div class="fig-abc">
                    ${fig_b.to_html(full_html=False, include_plotlyjs="cdn", config = {'displayModeBar': False})}
                </div>
            </div>
            <div class="c">
                <h5 style="margin: 10px;">Bargmann c</h5>
                <div class="fig-abc" style="width:100px;">
                    ${fig_c.to_html(full_html=False, include_plotlyjs="cdn", config = {'displayModeBar': False})}
                </div>
            </div>
        </div>
    </div>
% endif
