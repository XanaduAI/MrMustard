<%!
import plotly.graph_objects as go
%>

<style>

  .table-fock {
    border-collapse: collapse;
    text-align: left;
  }

  .th-fock, td-fock {
    text-align: left;
  }

  .fig-box-fock {
    background-color: #FBAB7E;
    background-image: linear-gradient(to top, #FBAB7E 0%, #F7CE68 100%);
    border-radius: 15px;
    box-shadow: 3px 5px 10px black;
    padding-left: 20px;
    height: 250px;
    max-width: 450px;
  }
  .fig-fock {
    box-shadow: 3px 5px 10px black;
    width: 430px;
    max-width: 430px;
  }
</style>

<h1>Fock representation</h1>

<table class="table-fock">
    <tr>
        <th class="th-fock">Ansatz</th>
        <th class="th-fock">Shape</th>
    </tr>

    <tr>
        <td class="td-fock">${rep.ansatz.__class__.__qualname__}</td>
        <td class="td-fock">${rep.array.shape}</td>
    </tr>
</table>

<%
    plot_fig = False
    if len(rep.array.shape) == 2:
        # `n` on the `x` axis, batch on the `y` axis
        plot_fig = True
        is_batched = True
        array = rep.array
    elif len(rep.array.shape) == 3 and rep.array.shape[0] == 1:
        # `n0` on the `x` axis, `n1` on the `y`
        plot_fig = True
        is_batched = False
        array = rep.array[0]

    if plot_fig:
        text = []
        for y, row in enumerate(array):
            text.append([])
            for x, val in enumerate(row):
                info = f"batch: {y}<br />" if is_batched else f"axis 0: {y}<br />"
                info += f"n: {x}<br />" if is_batched else f"axis 1: {x}<br />"
                info += f"val: {str(val)}<br />"
                text[y].append(info)

        layout = dict(
            height=200,
            width=430,
            margin=dict(l=0, r=0, t=0, b=0),
            showlegend=False,
            xaxis=dict(
                title="n" if is_batched else "axis 1",
                showgrid=True,
                showline=True,
            ),
            yaxis=dict(
                title="batch" if is_batched else "axis 0",
                autorange="reversed",
                showgrid=True,
                showticklabels=False,
            )
        )
        fig = go.Figure(
            data=go.Heatmap(
                z=abs(array),
                colorscale="viridis",
                showscale=False,
                hoverinfo="text",
                text=text,
            ),
            layout=layout
        )
%>

% if plot_fig:
    <div class="fig-box-fock">
        <h5 style="margin: 10px;">Fock array</h5>
        <div class="fig-fock">
            ${fig.to_html(full_html=False, include_plotlyjs="cdn")}
        </div>
    </div>
% endif
